{"version":3,"sources":["Components/Nav.jsx","Components/RestaurantListComponent/RestaurantList.js","Components/SortSelectComponent/SortSelect.js","Components/HomeComponent/Home.js","Components/ResultsListComponent/ResultList.js","Components/ResultsListComponent/ResultsDetails.js","Components/LocationComponent/Location.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","React","Component","RestaurantList","props","Math","floor","random","data","this","map","x","key","id","name","toUpperCase","rating","src","getRandomImage","alt","data-href","data-width","data-layout","data-action","data-size","data-show-faces","data-share","address","street","city","state","href","contact","site","target","email","phone","SortSelect","handleChange","bind","e","selectValue","value","console","log","onChange","Home","orderBy","axios","get","then","setState","handleSortChange","sortAlphabetically","sortByRating","sort","a","b","nameA","nameB","ratingA","ratingB","ResultList","distanceToUser","toFixed","ResultsDetails","arr","reduce","sum","length","avg","calculateAverage","squareDiffs","diff","avgSquareDiff","stdDev","sqrt","i","push","avrg","calculateStdDev","Location","addMarker","location","userLocation","lat","lng","panTo","nearbyRestaurants","searchRadius","searched","changeSearchRadius","getcurrentLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","pos","coords","latitude","longitude","nearbyMarkers","markerPos","position","type","defaultValue","onClick","google","zoom","style","width","height","initialCenter","t","c","latLng","icon","radius","restList","current","nearbyRes","dist","distanceBetween","lat1","lon1","lat2","lon2","unit","radlat1","PI","radlat2","theta","radtheta","sin","cos","acos","GoogleApiWrapper","apiKey","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"qcAIqBA,E,iLAEb,OACI,yBAAKC,UAAU,OACX,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,c,GAJaC,IAAMC,WCDlBC,G,kBACjB,WAAaC,GAAO,qEACVA,I,8EAUN,MAPY,CACR,wFACA,iFACA,iFACA,iFACA,kFAEOC,KAAKC,MAAsB,EAAhBD,KAAKE,a,+BAEpB,IAAD,OACCC,EAAQC,KAAKL,MAAbI,KAWP,OACI,6BACI,yBAAKT,UAAU,qBACVS,EAAKE,KAAI,SAAAC,GAAC,OACP,yBAAKC,IAAKD,EAAEE,GAAId,UAAW,iBACvB,yBAAKA,UAAU,iBACX,yBAAKA,UAAW,WAAU,4BAAKY,EAAEG,KAAKC,gBACtC,yBAAKhB,UAAW,aACZ,sCAAYY,EAAEK,OAAd,UAGR,yBAAKjB,UAAU,mBACX,yBAAKA,UAAU,YACX,yBACAkB,IAAO,EAAKC,iBACZC,IAAM,iBAGV,yBAAKpB,UAAU,SACf,yBAAKA,UAAU,UACfqB,YAAU,gDACVC,aAAW,GAAGC,cAAY,eAAeC,cAAY,OACrDC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,UAEpD,yBAAK3B,UAAU,cACX,wCACA,2BAAIY,EAAEgB,QAAQC,QACd,2BAAIjB,EAAEgB,QAAQE,MACd,2BAAIlB,EAAEgB,QAAQG,SAGtB,yBAAK/B,UAAU,gBACX,yBAAKA,UAAU,cACX,wCACA,2BAAG,uBAAGgC,KAAMpB,EAAEqB,QAAQC,KAAMC,OAAO,UAAUvB,EAAEqB,QAAQC,OACvD,2BAAItB,EAAEqB,QAAQG,OACd,2BAAIxB,EAAEqB,QAAQI,mB,GA9DNnC,IAAMC,YCC7BmC,G,kBACjB,WAAajC,GAAQ,IAAD,8BAChB,4CAAMA,KACDkC,aAAe,EAAKA,aAAaC,KAAlB,gBAFJ,E,0EAIPC,GACT,IAAMC,EAAcD,EAAEN,OAAOQ,MAC7BC,QAAQC,IAAIH,GACZhC,KAAKL,MAAMyC,SAASJ,K,+BAIpB,OACI,6BACA,wBAAI1C,UAAU,gBAAd,qBACA,yBAAKA,UAAU,cACX,yCACA,4BAAQ8C,SAAUpC,KAAK6B,cACnB,0CACA,2CAEJ,6BACI,kBAAC,IAAD,CAAMtC,GAAG,aAAY,8D,GAtBDC,IAAMC,Y,iBCMzB4C,G,kBACjB,WAAa1C,GAAQ,IAAD,8BAChB,4CAAMA,KACD0B,MAAQ,CACXtB,KAAM,GACNuC,QAAS,UAGPC,IAAMC,IAAI,oBAGTC,MAAK,SAAAvC,GACNgC,QAAQC,IAAIjC,EAAEH,MACd,EAAK2C,SAAU,CAAC3C,KAAMG,EAAEH,OACxBmC,QAAQC,IAAI,EAAKd,UAarB,EAAKsB,iBAAmB,EAAKA,iBAAiBb,KAAtB,gBA1BR,E,8EA4BDE,GACfE,QAAQC,IAAI,mBAAqBH,GACjChC,KAAK0C,SAAS,CAACJ,QAASN,IACxBE,QAAQC,IAAInC,KAAKqB,OACE,WAAhBW,EACDhC,KAAK4C,mBAAmB5C,KAAKqB,MAAMtB,MAEnCC,KAAK6C,aAAa7C,KAAKqB,MAAMtB,Q,yCAGdA,GACjB,OAAOA,EAAK+C,MAAK,SAACC,EAAGC,GACjB,IAAIC,EAAQF,EAAE1C,KAAKC,cACf4C,EAAQF,EAAE3C,KAAKC,cACnB,OAAQ2C,EAAQC,GAAU,EAAKD,EAAQC,EAAS,EAAI,O,mCAG7CnD,GACX,OAAOA,EAAK+C,MAAK,SAACC,EAAGC,GACjB,IAAIG,EAAUJ,EAAExC,OACZ6C,EAAUJ,EAAEzC,OAChB,OAAQ4C,EAAUC,GAAY,EAAKD,EAAUC,EAAW,EAAI,O,+BAGzD,IACArD,EAAQC,KAAKqB,MAAbtB,KACP,OACI,yBAAKT,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY8C,SAAUpC,KAAK2C,mBAC3B,kBAAC,EAAD,CAAgB5C,KAAQA,IACxB,kBAAC,IAAD,W,GA5DkBP,IAAMC,Y,yBCPnB4D,G,kBACjB,WAAY1D,GAAQ,qEACVA,I,sEAEA,IACCI,EAAQC,KAAKL,MAAbI,KACP,OACI,yBAAKT,UAAU,kBACVS,EAAKE,KAAI,SAAAC,GAAC,OACP,yBAAKC,IAAKD,EAAEE,GAAId,UAAW,sBACvB,4BAAKY,EAAEG,MACP,sCAAYH,EAAEK,QACd,oDAA0BL,EAAEoD,eAAeC,QAAQ,GAAnD,OACA,yBAAKjE,UAAU,cACX,0CACA,sCAAYY,EAAEgB,QAAQC,QACtB,qCAAWjB,EAAEgB,QAAQG,OACrB,oCAAUnB,EAAEgB,QAAQE,OAExB,yBAAK9B,UAAU,cACX,yCACA,qCAAWY,EAAEqB,QAAQG,OACrB,qCAAWxB,EAAEqB,QAAQI,OACrB,oCAAUzB,EAAEqB,QAAQC,gB,GAvBRhC,IAAMC,YCAzB+D,G,kBACjB,WAAY7D,GAAQ,qEACVA,I,8EAEO8D,GAMX,OALQA,EAAIC,QAAO,SAASC,EAAK1B,GAC/B,OAAO0B,EAAM1B,IACZ,GAEawB,EAAIG,S,sCAGVH,GACZ,IAAII,EAAM7D,KAAK8D,iBAAiBL,GAC5BM,EAAcN,EAAIxD,KAAI,SAASgC,GAC/B,IAAI+B,EAAO/B,EAAQ4B,EAEnB,OADcG,EAAOA,KAIrBC,EAAgBjE,KAAK8D,iBAAiBC,GAEtCG,EAAStE,KAAKuE,KAAKF,GAEvB,OADA/B,QAAQC,IAAI+B,GACLA,I,+BAKP,IAHM,IACCnE,EAAQC,KAAKL,MAAbI,KACH0D,EAAM,GACFW,EAAI,EAAGA,EAAErE,EAAK6D,OAAQQ,IAC1BX,EAAIY,KAAKtE,EAAKqE,GAAG7D,QAErB,IAAM+D,EAAOtE,KAAK8D,iBAAiBL,GAC7BS,EAASlE,KAAKuE,gBAAgBd,GACpC,OACI,yBAAKnE,UAAU,qBACX,iDAAuBS,EAAK6D,QAC5B,8CAAoBU,EAAKf,QAAQ,IACjC,yDAA+BW,EAAOX,QAAQ,S,GAtClB/D,IAAMC,Y,gBCOrC+E,EAAb,YACI,WAAa7E,GAAQ,IAAD,8BAChB,4CAAMA,KA4DV8E,UAAY,SAACC,EAAUzE,GACnB,EAAKyC,SAAS,CACViC,aAAc,CACVC,IAAKF,EAASE,MACdC,IAAKH,EAASG,SAGtB3C,QAAQC,IAAI,EAAKd,MAAMsD,cACvB1E,EAAI6E,MAAMJ,IAnEV,EAAKrD,MAAQ,CACTtB,KAAM,GACNgF,kBAAmB,GACnBJ,aAAc,CACVC,IAAK,UACLC,KAAM,WAEVG,aAAc,GACdC,UAAU,GAGV1C,IAAMC,IAAI,oBAGTC,MAAK,SAAAvC,GACNgC,QAAQC,IAAIjC,EAAEH,MACd,EAAK2C,SAAU,CAAC3C,KAAMG,EAAEH,OACxBmC,QAAQC,IAAI,EAAKd,UAYrB,EAAK6D,mBAAqB,EAAKA,mBAAmBpD,KAAxB,gBAC1B,EAAKkD,aAAe,EAAKA,aAAalD,KAAlB,gBAhCJ,EADxB,qNAoCmC9B,KAAKmF,qBApCxC,gBAoCgBP,EApChB,EAoCgBA,IAAKC,EApCrB,EAoCqBA,IACb3C,QAAQC,IAAI,QAAUyC,GACtB5E,KAAK0C,SAAS,CACViC,aAAc,CACVC,IAAKA,EACLC,IAAKA,KAzCrB,iJA8CQ,OAAIO,WAAaA,UAAUC,YAChB,IAAIC,SAAQ,SAACC,EAASC,GAC7BJ,UAAUC,YAAYI,oBAAmB,SAAAC,GACrC,IAAMC,EAASD,EAAIC,OACnBJ,EAAQ,CACRX,IAAKe,EAAOC,SACZf,IAAKc,EAAOE,kBAKb,CACHjB,IAAK,EACLC,IAAK,KA3DjB,yCAwEuB9C,GAEf/B,KAAK0C,SAAS,CACVsC,aAAcjD,EAAEN,OAAOQ,UA3EnC,+BA+Ee,IAAD,OAKF6D,EAAgB9F,KAAKqB,MAAM0D,kBAAkB9E,KAAK,SAAAC,GAClD,IAAI6F,EAAY7F,EAAEgB,QAAQwD,SAC1B,OAAO,kBAAC,SAAD,CAAQvE,IAAKD,EAAEE,GAAI4F,SAAUD,OAExC,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKzG,UAAU,aACX,6BACI,kEAEJ,6BACI,0DAAkC,2BAAO2G,KAAK,SAASC,aAAclG,KAAKqB,MAAM2D,aAAc5C,SAAUpC,KAAKkF,qBADjH,WAGA,yBAAK5F,UAAU,mBACX,4BAAQ6G,QAASnG,KAAKgF,cAAtB,YAGR,yBAAK1F,UAAU,UACf,kBAAC,MAAD,CACI8G,OAAQpG,KAAKL,MAAMyG,OACnBC,KAAM,EACNC,MA1BM,CACdC,MAAO,OACPC,OAAQ,SAyBAC,cAAe,CAAE7B,IAAK5E,KAAKqB,MAAMsD,aAAaC,IAAKC,IAAK7E,KAAKqB,MAAMsD,aAAaE,KAChFsB,QAAS,SAACO,EAAGzG,EAAK0G,GACd,EAAKlC,UAAUkC,EAAEC,OAAQ3G,KAI7B,kBAAC,SAAD,CAAQ+F,SAAUhG,KAAKqB,MAAMsD,aAAckC,KAAQ,0DAClD7G,KAAKqB,MAAM4D,UAAYa,IAIxB9F,KAAKqB,MAAM4D,UACX,yBAAK3F,UAAU,cACX,4DAGNU,KAAKqB,MAAM0D,kBAAkBnB,OAAS,GAAK,kBAAC,EAAD,CAAgB7D,KAAMC,KAAKqB,MAAM0D,oBAC5E/E,KAAKqB,MAAM0D,kBAAkBnB,OAAS,GAAK,kBAAC,EAAD,CAAYtE,UAAU,iBAAiBS,KAAMC,KAAKqB,MAAM0D,oBAEjG/E,KAAKqB,MAAM4D,UAAoD,IAAxCjF,KAAKqB,MAAM0D,kBAAkBnB,QAAgB,8DAExE,kBAAC,IAAD,SAhIhB,qCAqIQ1B,QAAQC,IAAInC,KAAKqB,OACjBrB,KAAK0C,SAAS,CAACuC,UAAU,IAKzB,IAJA,IAAM6B,EAAS9G,KAAKqB,MAAM2D,aACpB+B,EAAW/G,KAAKqB,MAAMtB,KACtBiH,EAAUhH,KAAKqB,MAAMsD,aACrBsC,EAAY,GACV7C,EAAI,EAAGA,EAAI2C,EAASnD,OAAQQ,IAAK,CACrC,IAAI8C,EAAOlH,KAAKmH,gBAAgBH,EAAQpC,IAAKoC,EAAQnC,IAAKkC,EAAS3C,GAAGlD,QAAQwD,SAASE,IAAKmC,EAAS3C,GAAGlD,QAAQwD,SAASG,IAAK,KAC9H3C,QAAQC,IAAI+E,GACZhF,QAAQC,IAAI,oCAAsC4E,EAAS3C,GAAG/D,KAAO,KAAM6G,GAC3EH,EAAS3C,GAAGd,eAAiB4D,EACzBA,GAAQJ,GACRG,EAAU5C,KAAK0C,EAAS3C,IAGhClC,QAAQC,IAAI8E,GACZjH,KAAK0C,SAAS,CAACqC,kBAAmBkC,MArJ1C,sCAuJoBG,EAAMC,EAAMC,EAAMC,EAAMC,GACpC,GAAKJ,IAASE,GAAUD,IAASE,EAC7B,OAAO,EAGP,IAAIE,EAAU7H,KAAK8H,GAAKN,EAAK,IACzBO,EAAU/H,KAAK8H,GAAKJ,EAAK,IACzBM,EAAQP,EAAKE,EACbM,EAAWjI,KAAK8H,GAAKE,EAAM,IAC3BV,EAAOtH,KAAKkI,IAAIL,GAAW7H,KAAKkI,IAAIH,GAAW/H,KAAKmI,IAAIN,GAAW7H,KAAKmI,IAAIJ,GAAW/H,KAAKmI,IAAIF,GASpG,OARIX,EAAO,IACPA,EAAO,GAIXA,EAAc,IADdA,EAAc,KADdA,EAAOtH,KAAKoI,KAAKd,IACCtH,KAAK8H,IACJ,OACR,MAAPF,IAAcN,GAAc,UACrB,MAAPM,IAAcN,GAAc,OACpB,IAALA,MAzKnB,GAA8B1H,IAAMC,WA6KrBwI,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEVzD,G,QC1JU2D,EAzBf,iLAGI,OAOE,yBAAK7I,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8I,OAAK,EAACC,KAAK,IAAIC,UAAWjG,IACjC,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,YAAYC,UAAW9D,WAdrD,GAAyBhF,IAAMC,WCMX8I,QACW,cAA7BC,OAAO9D,SAAS+D,UAEe,UAA7BD,OAAO9D,SAAS+D,UAEhBD,OAAO9D,SAAS+D,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmB1D,WACrBA,UAAU2D,cAAcC,MAAMvG,MAAK,SAAAwG,GACjCA,EAAaC,kB","file":"static/js/main.f5f780c9.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Nav extends React.Component {\n    render () {\n        return (\n            <nav className=\"nav\">\n                <h1><Link to=\"/\">MELP</Link></h1>\n            </nav>\n        );\n    }\n}","import React from 'react';\nimport './RestaurantList.css';\n\nexport default class RestaurantList extends React.Component {\n    constructor (props){\n        super(props);\n    }\n    getRandomImage(){\n        const arr = [\n            \"https://res.cloudinary.com/dipt6v4xr/image/upload/v1570469514/restaurant-chocolat.jpg\",\n            \"https://res.cloudinary.com/dipt6v4xr/image/upload/v1570537769/restaurant04.jpg\",\n            \"https://res.cloudinary.com/dipt6v4xr/image/upload/v1570537769/restaurant02.jpg\",\n            \"https://res.cloudinary.com/dipt6v4xr/image/upload/v1570537768/restaurant03.jpg\",\n            \"https://res.cloudinary.com/dipt6v4xr/image/upload/v1570537769/restaurant05.jpg\"\n        ];\n        return arr[Math.floor(Math.random() * 5)];\n    }\n    render () {\n        const {data} = this.props;\n        //console.log(data);\n\n        // const divArray = data.map((res) => {\n        //    return ( \n        //         <div key={res.id}>\n        //             <h1>{res.name}</h1> \n        //         </div>\n        //     )\n        // });\n\n        return (\n            <div>\n                <div className=\"restaurantListDiv\">\n                    {data.map(x => \n                        <div key={x.id} className =\"restaurantDiv\">\n                            <div className=\"nameRatingDiv\">\n                                <div className =\"nameDiv\"><h3>{x.name.toUpperCase()}</h3></div>\n                                <div className =\"ratingDiv\">\n                                    <p>Rating: {x.rating} / 4</p>\n                                </div>\n                            </div>\n                            <div className=\"imageAddressDiv\">\n                                <div className=\"imageDiv\">\n                                    <img \n                                    src = {this.getRandomImage()}\n                                    alt = \"Restaurant \"\n                                    />\n                                </div>\n                                <div className=\"fbDiv\">\n                                <div className=\"fb-like\" \n                                data-href=\"https://johnnyqnnz.github.io/melp-client-app/\" \n                                data-width=\"\" data-layout=\"button_count\" data-action=\"like\" \n                                data-size=\"small\" data-show-faces=\"true\" data-share=\"true\"></div>\n                                </div>\n                                <div className=\"addressDiv\">\n                                    <h4>Address:</h4>\n                                    <p>{x.address.street}</p>\n                                    <p>{x.address.city}</p>\n                                    <p>{x.address.state}</p>\n                                </div>\n                            </div>\n                            <div className=\"contactIdDiv\">\n                                <div className=\"contactDiv\">\n                                    <h4>Contact:</h4>\n                                    <p><a href={x.contact.site} target=\"_blank\">{x.contact.site}</a></p>\n                                    <p>{x.contact.email}</p>\n                                    <p>{x.contact.phone}</p>\n                                </div>\n                                {/* <div className=\"idDiv\">\n                                    <p>{x.id}</p>\n                                </div> */}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './SortSelect.css';\n\nexport default class SortSelect extends React.Component {\n    constructor (props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e){\n        const selectValue = e.target.value;\n        console.log(selectValue);\n        this.props.onChange(selectValue);\n        \n    }\n    render () {\n        return (\n            <div>\n            <h2 className=\"sortSelectH2\">Restaurant search</h2>\n            <div className=\"sortSelect\">\n                <p>Order by: </p>\n                <select onChange={this.handleChange}>\n                    <option>ABC...</option>\n                    <option>Rating</option>\n                </select>\n                <div>\n                    <Link to=\"/location\"><button>Search by location</button></Link>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nimport Nav from '../Nav';\nimport RestaurantList from '../RestaurantListComponent/RestaurantList';\nimport SortSelect from '../SortSelectComponent/SortSelect';\nimport ScrollUpButton from 'react-scroll-up-button';\nimport '../../App.css';\n\n\nexport default class Home extends React.Component {\n    constructor (props) {\n        super(props); \n        this.state = {\n          data: [],\n          orderBy: 'ABC...'\n        }\n        if(process.env.NODE_ENV === \"production\") {\n            axios.get('./data/data.json')\n            //fetch('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json')\n            //axios.get('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json', { method: 'GET', headers: {'Access-Control-Allow-Origin': '*','Content-Type': 'application/json', mode: 'no-cors'}})\n            .then(x => {\n            console.log(x.data);\n            this.setState ({data: x.data});\n            console.log(this.state);\n            });\n        } else if(process.env.NODE_ENV === \"development\") {\n            axios.get('./data/data.json')\n            //fetch('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json')\n            //axios.get('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json', { method: 'GET', headers: {'Access-Control-Allow-Origin': '*','Content-Type': 'application/json', mode: 'no-cors'}})\n            .then(x => {\n            console.log(x.data);\n            this.setState ({data: x.data});\n            console.log(this.state);\n            });\n        }\n        \n        this.handleSortChange = this.handleSortChange.bind(this)\n      }\n      handleSortChange(selectValue) {\n        console.log('Selected value: ' + selectValue);\n        this.setState({orderBy: selectValue})\n        console.log(this.state);\n        if(selectValue === 'ABC...') {\n          this.sortAlphabetically(this.state.data);\n        } else {\n          this.sortByRating(this.state.data);\n        }\n      }\n      sortAlphabetically(data)  {\n        return data.sort((a, b) => {\n            var nameA = a.name.toUpperCase();\n            var nameB = b.name.toUpperCase();\n            return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\n        });\n      }\n      sortByRating(data) {\n        return data.sort((a, b) => {\n            var ratingA = a.rating;\n            var ratingB = b.rating;\n            return (ratingA > ratingB) ? -1 : (ratingA < ratingB) ? 1 : 0;\n        });\n      }\n    render () {\n        const {data} = this.state\n        return (\n            <div className=\"homeDiv\">\n                <Nav/>\n                <SortSelect onChange={this.handleSortChange}/>\n                <RestaurantList data = {data}/>\n                <ScrollUpButton />\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport './ResultsList.css';\n\nexport default class ResultList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const {data} = this.props;\n        return (\n            <div className=\"resultsListDiv\">\n                {data.map(x => \n                    <div key={x.id} className =\"resultsListItemDiv\">\n                        <h3>{x.name}</h3>\n                        <p>Rating: {x.rating}</p>\n                        <p>Distance from marker: {x.distanceToUser.toFixed(3)} Km</p>\n                        <div className=\"addressDiv\">\n                            <h4>Location: </h4>\n                            <p>Street: {x.address.street}</p>\n                            <p>State: {x.address.state}</p>\n                            <p>City: {x.address.city}</p>\n                        </div>\n                        <div className=\"contactDiv\">\n                            <h4>Contact: </h4>\n                            <p>Email: {x.contact.email}</p>\n                            <p>Phone: {x.contact.phone}</p>\n                            <p>Site: {x.contact.site}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './ResultsDetails.css';\n\nexport default class ResultsDetails extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    calculateAverage(arr) {\n        let sum = arr.reduce(function(sum, value){\n            return sum + value;\n          }, 0);\n        \n          var avg = sum / arr.length;\n          return avg;\n    }\n    calculateStdDev(arr) {\n        var avg = this.calculateAverage(arr);\n        var squareDiffs = arr.map(function(value){\n            var diff = value - avg;\n            var sqrDiff = diff * diff;\n            return sqrDiff;\n        });\n        \n        var avgSquareDiff = this.calculateAverage(squareDiffs);\n\n        var stdDev = Math.sqrt(avgSquareDiff);\n        console.log(stdDev);\n        return stdDev;\n    }\n    render() {\n        const {data} = this.props;\n        let arr = [];\n        for(let i = 0; i<data.length; i++) {\n            arr.push(data[i].rating);\n        }\n        const avrg = this.calculateAverage(arr);\n        const stdDev = this.calculateStdDev(arr);\n        return (\n            <div className=\"resultsDetailsDiv\">\n                <p>Restaurants found: {data.length}</p>\n                <p>Average rating: {avrg.toFixed(2)}</p>\n                <p>Rating standard deviation: {stdDev.toFixed(2)}</p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport Nav from '../Nav';\nimport ResultList from '../ResultsListComponent/ResultList';\nimport ResultsDetails from '../ResultsListComponent/ResultsDetails';\nimport './Location.css';\nimport { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport ScrollUpButton from 'react-scroll-up-button';\n\n\nexport class Location extends React.Component {\n    constructor (props) {\n        super(props); \n        this.state = {\n            data: [],\n            nearbyRestaurants: [],\n            userLocation: {\n                lat: 19.432608,\n                lng: -99.133209\n            },\n            searchRadius: 10.0,\n            searched: false\n        }\n        if(process.env.NODE_ENV === \"production\") {\n            axios.get('./data/data.json')\n            //fetch('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json')\n            //axios.get('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json', { method: 'GET', headers: {'Access-Control-Allow-Origin': '*','Content-Type': 'application/json', mode: 'no-cors'}})\n            .then(x => {\n            console.log(x.data);\n            this.setState ({data: x.data});\n            console.log(this.state);\n            });\n        } else if(process.env.NODE_ENV === \"development\") {\n            axios.get('./data/data.json')\n            //fetch('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json')\n            //axios.get('https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json', { method: 'GET', headers: {'Access-Control-Allow-Origin': '*','Content-Type': 'application/json', mode: 'no-cors'}})\n            .then(x => {\n            console.log(x.data);\n            this.setState ({data: x.data});\n            console.log(this.state);\n            });\n        }\n        this.changeSearchRadius = this.changeSearchRadius.bind(this);\n        this.searchRadius = this.searchRadius.bind(this)\n    }\n    async componentDidMount() {\n        const { lat, lng } = await this.getcurrentLocation();\n        console.log('lat: ' + lat);\n        this.setState({\n            userLocation: {\n                lat: lat,\n                lng: lng\n            }\n        })\n    }\n    getcurrentLocation() {\n        if (navigator && navigator.geolocation) {\n            return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                const coords = pos.coords;\n                resolve({\n                lat: coords.latitude,\n                lng: coords.longitude\n                });\n            });\n            });\n        }\n        return {\n            lat: 0,\n            lng: 0\n        };\n    }\n    addMarker = (location, map) => {\n        this.setState({\n            userLocation: {\n                lat: location.lat(),\n                lng: location.lng()\n            }\n        });\n        console.log(this.state.userLocation)\n        map.panTo(location);\n    };\n    changeSearchRadius(e) {\n        //console.log(e);\n        this.setState({\n            searchRadius: e.target.value\n        });\n        //console.log(this.state);\n    }\n    render () {\n        const mapStyles = {\n            width: '100%',\n            height: '300px',\n        };\n        let nearbyMarkers = this.state.nearbyRestaurants.map( x => {\n            let markerPos = x.address.location;\n            return <Marker key={x.id} position={markerPos}/>\n        })\n        return (\n            <div>\n                <Nav/>\n                <div className=\"searchDiv\">\n                    <div>\n                        <h3>Click on the map to add a marker!</h3>\n                    </div>\n                    <div>\n                        <p>Search within a radius of: </p><input type=\"number\" defaultValue={this.state.searchRadius} onChange={this.changeSearchRadius}/> meters\n                    </div>\n                    <div className=\"searchButtonDiv\">\n                        <button onClick={this.searchRadius}>Search</button>\n                    </div>\n                </div>\n                <div className=\"mapDiv\">\n                <Map\n                    google={this.props.google}\n                    zoom={8}\n                    style={mapStyles}\n                    initialCenter={{ lat: this.state.userLocation.lat, lng: this.state.userLocation.lng}}\n                    onClick={(t, map, c) => {\n                        this.addMarker(c.latLng, map)\n                    }\n                    }\n                >\n                    <Marker position={this.state.userLocation} icon = {\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"} />\n                    {this.state.searched && nearbyMarkers}\n                </Map>\n                </div>\n                {\n                    this.state.searched && \n                    <div className=\"resultsDiv\">\n                        <h5>Reccomended nearby places: </h5>\n                    </div>\n                }\n                { this.state.nearbyRestaurants.length > 0 && <ResultsDetails data={this.state.nearbyRestaurants}/>}\n                { this.state.nearbyRestaurants.length > 0 && <ResultList className=\"resultsListDiv\" data={this.state.nearbyRestaurants}/> }\n                {\n                    this.state.searched && this.state.nearbyRestaurants.length === 0 && <h3>No results. Try another point.</h3>\n                }\n                <ScrollUpButton />\n            </div>\n        );\n    }\n    searchRadius() {\n        console.log(this.state);\n        this.setState({searched: true});\n        const radius = this.state.searchRadius;\n        const restList = this.state.data;\n        const current = this.state.userLocation;\n        const nearbyRes = [];\n        for(let i = 0; i < restList.length; i++) {\n            let dist = this.distanceBetween(current.lat, current.lng, restList[i].address.location.lat, restList[i].address.location.lng, 'K');\n            console.log(dist);\n            console.log('distance between user marker and ' + restList[i].name + ': '+ dist);\n            restList[i].distanceToUser = dist;\n            if (dist <= radius) {\n                nearbyRes.push(restList[i]);\n            }\n        }\n        console.log(nearbyRes);\n        this.setState({nearbyRestaurants: nearbyRes});\n    }\n    distanceBetween(lat1, lon1, lat2, lon2, unit) {\n        if ((lat1 === lat2) && (lon1 === lon2)) {\n            return 0;\n        }\n        else {\n            var radlat1 = Math.PI * lat1/180;\n            var radlat2 = Math.PI * lat2/180;\n            var theta = lon1-lon2;\n            var radtheta = Math.PI * theta/180;\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = dist * 180/Math.PI;\n            dist = dist * 60 * 1.1515;\n            if (unit===\"K\") { dist = dist * 1.609344 }\n            if (unit===\"N\") { dist = dist * 0.8684 }\n            return dist*1000;\n        }\n    }\n}\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBmX5reXyIC2aYXiVgg7kcoQZN1Be3WxFE'\n  })(Location);","import React from 'react';\nimport Home from './Components/HomeComponent/Home';\nimport Location from './Components/LocationComponent/Location';\nimport { HashRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nexport class App extends React.Component {\n  \n  render() {\n    return (\n      // <div className=\"App\">\n      //   <Nav/>\n      //   <SortSelect onChange={this.handleSortChange}/>\n      //   <RestaurantList data = {data}/>\n      //   <ScrollUpButton />\n      // </div>\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/location\" component={Location}/>\n          </Switch>\n        </HashRouter>\n      </div>\n      \n    );\n  }\n\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}